/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  EscrowUpgradeable,
  EscrowUpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "depositsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e98806100206000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100cc578063e3a9db1a146100f7578063f2fde38b14610134578063f340fa011461015d57610070565b806351cff8d914610075578063715018a61461009e5780638129fc1c146100b5575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610903565b610179565b005b3480156100aa57600080fd5b506100b3610285565b005b3480156100c157600080fd5b506100ca610299565b005b3480156100d857600080fd5b506100e16103d7565b6040516100ee9190610951565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190610998565b610401565b60405161012b91906109de565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610998565b61044a565b005b61017760048036038101906101729190610998565b6104ce565b005b610181610583565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610233818373ffffffffffffffffffffffffffffffffffffffff1661060190919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161027991906109de565b60405180910390a25050565b61028d610583565b61029760006106f5565b565b60008060019054906101000a900460ff161590508080156102ca5750600160008054906101000a900460ff1660ff16105b806102f757506102d9306107bb565b1580156102f65750600160008054906101000a900460ff1660ff16145b5b610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90610a7c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610373576001600060016101000a81548160ff0219169083151502179055505b61037b6107de565b80156103d45760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103cb9190610aee565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610452610583565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610b7b565b60405180910390fd5b6104cb816106f5565b50565b6104d6610583565b600034905080606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461052a9190610bca565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c48260405161057791906109de565b60405180910390a25050565b61058b610837565b73ffffffffffffffffffffffffffffffffffffffff166105a96103d7565b73ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f690610c6c565b60405180910390fd5b565b80471015610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90610cd8565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161066a90610d29565b60006040518083038185875af1925050503d80600081146106a7576040519150601f19603f3d011682016040523d82523d6000602084013e6106ac565b606091505b50509050806106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790610db0565b60405180910390fd5b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490610e42565b60405180910390fd5b61083561083f565b565b600033905090565b600060019054906101000a900460ff1661088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088590610e42565b60405180910390fd5b61089e610899610837565b6106f5565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d0826108a5565b9050919050565b6108e0816108c5565b81146108eb57600080fd5b50565b6000813590506108fd816108d7565b92915050565b600060208284031215610919576109186108a0565b5b6000610927848285016108ee565b91505092915050565b600061093b826108a5565b9050919050565b61094b81610930565b82525050565b60006020820190506109666000830184610942565b92915050565b61097581610930565b811461098057600080fd5b50565b6000813590506109928161096c565b92915050565b6000602082840312156109ae576109ad6108a0565b5b60006109bc84828501610983565b91505092915050565b6000819050919050565b6109d8816109c5565b82525050565b60006020820190506109f360008301846109cf565b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610a66602e836109f9565b9150610a7182610a0a565b604082019050919050565b60006020820190508181036000830152610a9581610a59565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610ad8610ad3610ace84610a9c565b610ab3565b610aa6565b9050919050565b610ae881610abd565b82525050565b6000602082019050610b036000830184610adf565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b656026836109f9565b9150610b7082610b09565b604082019050919050565b60006020820190508181036000830152610b9481610b58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd5826109c5565b9150610be0836109c5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1557610c14610b9b565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c566020836109f9565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000610cc2601d836109f9565b9150610ccd82610c8c565b602082019050919050565b60006020820190508181036000830152610cf181610cb5565b9050919050565b600081905092915050565b50565b6000610d13600083610cf8565b9150610d1e82610d03565b600082019050919050565b6000610d3482610d06565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000610d9a603a836109f9565b9150610da582610d3e565b604082019050919050565b60006020820190508181036000830152610dc981610d8d565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610e2c602b836109f9565b9150610e3782610dd0565b604082019050919050565b60006020820190508181036000830152610e5b81610e1f565b905091905056fea264697066735822122072b79e58133b29563fdf925d3fe7349657a7944e5fa0689c3fe3ae88a98b590f64736f6c63430008090033";

type EscrowUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowUpgradeable__factory extends ContractFactory {
  constructor(...args: EscrowUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EscrowUpgradeable> {
    return super.deploy(overrides || {}) as Promise<EscrowUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EscrowUpgradeable {
    return super.attach(address) as EscrowUpgradeable;
  }
  override connect(signer: Signer): EscrowUpgradeable__factory {
    return super.connect(signer) as EscrowUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowUpgradeableInterface {
    return new utils.Interface(_abi) as EscrowUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EscrowUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as EscrowUpgradeable;
  }
}
