/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Ticket, TicketInterface } from "../../contracts/Ticket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061185e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb4651461022e578063b88d4fde14610241578063c87b56dd14610254578063e985e9c514610267578063f2fde38b146102a357600080fd5b8063715018a6146102055780638129fc1c1461020d5780638da5cb5b1461021557806395d89b411461022657600080fd5b806323b872dd116100e957806323b872dd1461019857806340c10f19146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611326565b6102b6565b60405190151581526020015b60405180910390f35b61014b6102e1565b60405161013a919061139b565b61016b6101663660046113ae565b610373565b6040516001600160a01b03909116815260200161013a565b6101966101913660046113e3565b61039a565b005b6101966101a636600461140d565b6104b5565b6101966101b93660046113e3565b6104e6565b6101966101cc36600461140d565b61053e565b61016b6101df3660046113ae565b610559565b6101f76101f2366004611449565b6105b9565b60405190815260200161013a565b61019661063f565b610196610653565b6033546001600160a01b031661016b565b61014b6107b2565b61019661023c366004611464565b6107c1565b61019661024f3660046114b6565b6107d0565b61014b6102623660046113ae565b610808565b61012e610275366004611592565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101966102b1366004611449565b61087c565b60006001600160e01b031982166340c10f1960e01b14806102db57506102db826108f2565b92915050565b6060609780546102f0906115c5565b80601f016020809104026020016040519081016040528092919081815260200182805461031c906115c5565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050905090565b600061037e82610942565b506000908152609b60205260409020546001600160a01b031690565b60006103a582610559565b9050806001600160a01b0316836001600160a01b031614156104185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043457506104348133610275565b6104a65760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161040f565b6104b083836109a1565b505050565b6104bf3382610a0f565b6104db5760405162461bcd60e51b815260040161040f90611600565b6104b0838383610a8e565b6104ee610c2a565b6104f88282610c84565b604080516001600160a01b0384168152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a15050565b6104b0838383604051806020016040528060008152506107d0565b6000818152609960205260408120546001600160a01b0316806102db5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b60006001600160a01b0382166106235760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040f565b506001600160a01b03166000908152609a602052604090205490565b610647610c2a565b6106516000610c9e565b565b600054610100900460ff16158080156106735750600054600160ff909116105b8061068d5750303b15801561068d575060005460ff166001145b6106f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161040f565b6000805460ff191660011790558015610713576000805461ff0019166101001790555b61075960405180604001604052806006815260200165151a58dad95d60d21b81525060405180604001604052806006815260200165151a58dad95d60d21b815250610cf0565b610761610d21565b610769610d50565b80156107af576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609880546102f0906115c5565b6107cc338383610d77565b5050565b6107da3383610a0f565b6107f65760405162461bcd60e51b815260040161040f90611600565b61080284848484610e46565b50505050565b606061081382610942565b600061082a60408051602081019091526000815290565b9050600081511161084a5760405180602001604052806000815250610875565b8061085484610e79565b60405160200161086592919061164e565b6040516020818303038152906040525b9392505050565b610884610c2a565b6001600160a01b0381166108e95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040f565b6107af81610c9e565b60006001600160e01b031982166380ac58cd60e01b148061092357506001600160e01b03198216635b5e139f60e01b145b806102db57506301ffc9a760e01b6001600160e01b03198316146102db565b6000818152609960205260409020546001600160a01b03166107af5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109d682610559565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a1b83610559565b9050806001600160a01b0316846001600160a01b03161480610a6257506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b80610a865750836001600160a01b0316610a7b84610373565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aa182610559565b6001600160a01b031614610b055760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161040f565b6001600160a01b038216610b675760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040f565b610b726000826109a1565b6001600160a01b0383166000908152609a60205260408120805460019290610b9b908490611693565b90915550506001600160a01b0382166000908152609a60205260408120805460019290610bc99084906116aa565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6033546001600160a01b031633146106515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040f565b6107cc828260405180602001604052806000815250610f77565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610d175760405162461bcd60e51b815260040161040f906116c2565b6107cc8282610faa565b600054610100900460ff16610d485760405162461bcd60e51b815260040161040f906116c2565b610651610ff8565b600054610100900460ff166106515760405162461bcd60e51b815260040161040f906116c2565b816001600160a01b0316836001600160a01b03161415610dd95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040f565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e51848484610a8e565b610e5d84848484611028565b6108025760405162461bcd60e51b815260040161040f9061170d565b606081610e9d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ec75780610eb18161175f565b9150610ec09050600a83611790565b9150610ea1565b60008167ffffffffffffffff811115610ee257610ee26114a0565b6040519080825280601f01601f191660200182016040528015610f0c576020820181803683370190505b5090505b8415610a8657610f21600183611693565b9150610f2e600a866117a4565b610f399060306116aa565b60f81b818381518110610f4e57610f4e6117b8565b60200101906001600160f81b031916908160001a905350610f70600a86611790565b9450610f10565b610f818383611135565b610f8e6000848484611028565b6104b05760405162461bcd60e51b815260040161040f9061170d565b600054610100900460ff16610fd15760405162461bcd60e51b815260040161040f906116c2565b8151610fe4906097906020850190611277565b5080516104b0906098906020840190611277565b600054610100900460ff1661101f5760405162461bcd60e51b815260040161040f906116c2565b61065133610c9e565b60006001600160a01b0384163b1561112a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061106c9033908990889088906004016117ce565b602060405180830381600087803b15801561108657600080fd5b505af19250505080156110b6575060408051601f3d908101601f191682019092526110b39181019061180b565b60015b611110573d8080156110e4576040519150601f19603f3d011682016040523d82523d6000602084013e6110e9565b606091505b5080516111085760405162461bcd60e51b815260040161040f9061170d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a86565b506001949350505050565b6001600160a01b03821661118b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040f565b6000818152609960205260409020546001600160a01b0316156111f05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040f565b6001600160a01b0382166000908152609a602052604081208054600192906112199084906116aa565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611283906115c5565b90600052602060002090601f0160209004810192826112a557600085556112eb565b82601f106112be57805160ff19168380011785556112eb565b828001600101855582156112eb579182015b828111156112eb5782518255916020019190600101906112d0565b506112f79291506112fb565b5090565b5b808211156112f757600081556001016112fc565b6001600160e01b0319811681146107af57600080fd5b60006020828403121561133857600080fd5b813561087581611310565b60005b8381101561135e578181015183820152602001611346565b838111156108025750506000910152565b60008151808452611387816020860160208601611343565b601f01601f19169290920160200192915050565b602081526000610875602083018461136f565b6000602082840312156113c057600080fd5b5035919050565b80356001600160a01b03811681146113de57600080fd5b919050565b600080604083850312156113f657600080fd5b6113ff836113c7565b946020939093013593505050565b60008060006060848603121561142257600080fd5b61142b846113c7565b9250611439602085016113c7565b9150604084013590509250925092565b60006020828403121561145b57600080fd5b610875826113c7565b6000806040838503121561147757600080fd5b611480836113c7565b91506020830135801515811461149557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156114cc57600080fd5b6114d5856113c7565b93506114e3602086016113c7565b925060408501359150606085013567ffffffffffffffff8082111561150757600080fd5b818701915087601f83011261151b57600080fd5b81358181111561152d5761152d6114a0565b604051601f8201601f19908116603f01168101908382118183101715611555576115556114a0565b816040528281528a602084870101111561156e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115a557600080fd5b6115ae836113c7565b91506115bc602084016113c7565b90509250929050565b600181811c908216806115d957607f821691505b602082108114156115fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008351611660818460208801611343565b835190830190611674818360208801611343565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116a5576116a561167d565b500390565b600082198211156116bd576116bd61167d565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156117735761177361167d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261179f5761179f61177a565b500490565b6000826117b3576117b361177a565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118019083018461136f565b9695505050505050565b60006020828403121561181d57600080fd5b81516108758161131056fea26469706673582212202b749a9413527db74f6bacc571e9d6cf0be4e0b7659c81f92e84a10644f15abc64736f6c63430008090033";

type TicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ticket__factory extends ContractFactory {
  constructor(...args: TicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ticket> {
    return super.deploy(overrides || {}) as Promise<Ticket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ticket {
    return super.attach(address) as Ticket;
  }
  override connect(signer: Signer): Ticket__factory {
    return super.connect(signer) as Ticket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketInterface {
    return new utils.Interface(_abi) as TicketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticket {
    return new Contract(address, _abi, signerOrProvider) as Ticket;
  }
}
