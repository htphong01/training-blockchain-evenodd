/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Ticket, TicketInterface } from "../../contracts/Ticket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb4651461022e578063b88d4fde14610241578063c87b56dd14610254578063e985e9c514610267578063f2fde38b146102a357600080fd5b8063715018a6146102055780638129fc1c1461020d5780638da5cb5b1461021557806395d89b411461022657600080fd5b806323b872dd116100e957806323b872dd1461019857806340c10f19146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e61012936600461136f565b6102b6565b60405190151581526020015b60405180910390f35b61014b6102e1565b60405161013a91906113e4565b61016b6101663660046113f7565b610373565b6040516001600160a01b03909116815260200161013a565b61019661019136600461142c565b61039a565b005b6101966101a6366004611456565b6104b5565b6101966101b936600461142c565b6104e6565b6101966101cc366004611456565b610587565b61016b6101df3660046113f7565b6105a2565b6101f76101f2366004611492565b610602565b60405190815260200161013a565b610196610688565b61019661069c565b6033546001600160a01b031661016b565b61014b6107fb565b61019661023c3660046114ad565b61080a565b61019661024f3660046114ff565b610819565b61014b6102623660046113f7565b610851565b61012e6102753660046115db565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101966102b1366004611492565b6108c5565b60006001600160e01b031982166340c10f1960e01b14806102db57506102db8261093b565b92915050565b6060609780546102f09061160e565b80601f016020809104026020016040519081016040528092919081815260200182805461031c9061160e565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b5050505050905090565b600061037e8261098b565b506000908152609b60205260409020546001600160a01b031690565b60006103a5826105a2565b9050806001600160a01b0316836001600160a01b031614156104185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043457506104348133610275565b6104a65760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161040f565b6104b083836109ea565b505050565b6104bf3382610a58565b6104db5760405162461bcd60e51b815260040161040f90611649565b6104b0838383610ad7565b6104ee610c73565b6001600160a01b0382166105375760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420616464726573732160801b604482015260640161040f565b6105418282610ccd565b604080516001600160a01b0384168152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a15050565b6104b083838360405180602001604052806000815250610819565b6000818152609960205260408120546001600160a01b0316806102db5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b60006001600160a01b03821661066c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040f565b506001600160a01b03166000908152609a602052604090205490565b610690610c73565b61069a6000610ce7565b565b600054610100900460ff16158080156106bc5750600054600160ff909116105b806106d65750303b1580156106d6575060005460ff166001145b6107395760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161040f565b6000805460ff19166001179055801561075c576000805461ff0019166101001790555b6107a260405180604001604052806006815260200165151a58dad95d60d21b81525060405180604001604052806006815260200165151a58dad95d60d21b815250610d39565b6107aa610d6a565b6107b2610d99565b80156107f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609880546102f09061160e565b610815338383610dc0565b5050565b6108233383610a58565b61083f5760405162461bcd60e51b815260040161040f90611649565b61084b84848484610e8f565b50505050565b606061085c8261098b565b600061087360408051602081019091526000815290565b9050600081511161089357604051806020016040528060008152506108be565b8061089d84610ec2565b6040516020016108ae929190611697565b6040516020818303038152906040525b9392505050565b6108cd610c73565b6001600160a01b0381166109325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040f565b6107f881610ce7565b60006001600160e01b031982166380ac58cd60e01b148061096c57506001600160e01b03198216635b5e139f60e01b145b806102db57506301ffc9a760e01b6001600160e01b03198316146102db565b6000818152609960205260409020546001600160a01b03166107f85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a1f826105a2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a64836105a2565b9050806001600160a01b0316846001600160a01b03161480610aab57506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b80610acf5750836001600160a01b0316610ac484610373565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aea826105a2565b6001600160a01b031614610b4e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161040f565b6001600160a01b038216610bb05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040f565b610bbb6000826109ea565b6001600160a01b0383166000908152609a60205260408120805460019290610be49084906116dc565b90915550506001600160a01b0382166000908152609a60205260408120805460019290610c129084906116f3565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6033546001600160a01b0316331461069a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040f565b610815828260405180602001604052806000815250610fc0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610d605760405162461bcd60e51b815260040161040f9061170b565b6108158282610ff3565b600054610100900460ff16610d915760405162461bcd60e51b815260040161040f9061170b565b61069a611041565b600054610100900460ff1661069a5760405162461bcd60e51b815260040161040f9061170b565b816001600160a01b0316836001600160a01b03161415610e225760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040f565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e9a848484610ad7565b610ea684848484611071565b61084b5760405162461bcd60e51b815260040161040f90611756565b606081610ee65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f105780610efa816117a8565b9150610f099050600a836117d9565b9150610eea565b60008167ffffffffffffffff811115610f2b57610f2b6114e9565b6040519080825280601f01601f191660200182016040528015610f55576020820181803683370190505b5090505b8415610acf57610f6a6001836116dc565b9150610f77600a866117ed565b610f829060306116f3565b60f81b818381518110610f9757610f97611801565b60200101906001600160f81b031916908160001a905350610fb9600a866117d9565b9450610f59565b610fca838361117e565b610fd76000848484611071565b6104b05760405162461bcd60e51b815260040161040f90611756565b600054610100900460ff1661101a5760405162461bcd60e51b815260040161040f9061170b565b815161102d9060979060208501906112c0565b5080516104b09060989060208401906112c0565b600054610100900460ff166110685760405162461bcd60e51b815260040161040f9061170b565b61069a33610ce7565b60006001600160a01b0384163b1561117357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110b5903390899088908890600401611817565b602060405180830381600087803b1580156110cf57600080fd5b505af19250505080156110ff575060408051601f3d908101601f191682019092526110fc91810190611854565b60015b611159573d80801561112d576040519150601f19603f3d011682016040523d82523d6000602084013e611132565b606091505b5080516111515760405162461bcd60e51b815260040161040f90611756565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610acf565b506001949350505050565b6001600160a01b0382166111d45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040f565b6000818152609960205260409020546001600160a01b0316156112395760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040f565b6001600160a01b0382166000908152609a602052604081208054600192906112629084906116f3565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546112cc9061160e565b90600052602060002090601f0160209004810192826112ee5760008555611334565b82601f1061130757805160ff1916838001178555611334565b82800160010185558215611334579182015b82811115611334578251825591602001919060010190611319565b50611340929150611344565b5090565b5b808211156113405760008155600101611345565b6001600160e01b0319811681146107f857600080fd5b60006020828403121561138157600080fd5b81356108be81611359565b60005b838110156113a757818101518382015260200161138f565b8381111561084b5750506000910152565b600081518084526113d081602086016020860161138c565b601f01601f19169290920160200192915050565b6020815260006108be60208301846113b8565b60006020828403121561140957600080fd5b5035919050565b80356001600160a01b038116811461142757600080fd5b919050565b6000806040838503121561143f57600080fd5b61144883611410565b946020939093013593505050565b60008060006060848603121561146b57600080fd5b61147484611410565b925061148260208501611410565b9150604084013590509250925092565b6000602082840312156114a457600080fd5b6108be82611410565b600080604083850312156114c057600080fd5b6114c983611410565b9150602083013580151581146114de57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561151557600080fd5b61151e85611410565b935061152c60208601611410565b925060408501359150606085013567ffffffffffffffff8082111561155057600080fd5b818701915087601f83011261156457600080fd5b813581811115611576576115766114e9565b604051601f8201601f19908116603f0116810190838211818310171561159e5761159e6114e9565b816040528281528a60208487010111156115b757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115ee57600080fd5b6115f783611410565b915061160560208401611410565b90509250929050565b600181811c9082168061162257607f821691505b6020821081141561164357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600083516116a981846020880161138c565b8351908301906116bd81836020880161138c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116ee576116ee6116c6565b500390565b60008219821115611706576117066116c6565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156117bc576117bc6116c6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117e8576117e86117c3565b500490565b6000826117fc576117fc6117c3565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061184a908301846113b8565b9695505050505050565b60006020828403121561186657600080fd5b81516108be8161135956fea26469706673582212202a31ef48db5ba7fa96f66f7291beea6b55c6dee287dc126f1406c1a63fac68bb64736f6c63430008090033";

type TicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ticket__factory extends ContractFactory {
  constructor(...args: TicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ticket> {
    return super.deploy(overrides || {}) as Promise<Ticket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ticket {
    return super.attach(address) as Ticket;
  }
  override connect(signer: Signer): Ticket__factory {
    return super.connect(signer) as Ticket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketInterface {
    return new utils.Interface(_abi) as TicketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticket {
    return new Contract(address, _abi, signerOrProvider) as Ticket;
  }
}
