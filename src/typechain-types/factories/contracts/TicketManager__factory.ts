/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TicketManager,
  TicketManagerInterface,
} from "../../contracts/TicketManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_times",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_times",
        type: "uint256",
      },
    ],
    name: "ExtendedTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "SetPricePerTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_remainTimes",
        type: "uint256",
      },
    ],
    name: "SubTractedTimes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithDrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_times",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cash",
    outputs: [
      {
        internalType: "contract ICash",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_times",
        type: "uint256",
      },
    ],
    name: "extendTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getTicketOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "times",
            type: "uint256",
          },
        ],
        internalType: "struct UserTicket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITicket",
        name: "_ticketAddress",
        type: "address",
      },
      {
        internalType: "contract ICash",
        name: "_cashAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setPricePerTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "subtractTimes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticket",
    outputs: [
      {
        internalType: "contract ITicket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ticketOf",
    outputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "times",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611261806100206000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063d848f99111610059578063d848f991146102ec578063d96a094a1461030c578063e2d208911461031f578063f2fde38b1461033557600080fd5b80638da5cb5b14610241578063903fe15f1461025f578063961be391146102a8578063d08150b2146102c857600080fd5b8063485cc955116100c6578063485cc955146101b457806350662e67146101d45780636cc25db7146101f4578063715018a61461022c57600080fd5b806301ffc9a7146100ed5780630412f4ab146101225780631cf905231461019f575b600080fd5b3480156100f957600080fd5b5061010d610108366004610f9d565b610355565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061018461013d366004610fdc565b6040805180820190915260008082526020820152506001600160a01b03166000908152609b6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610119565b6101b26101ad366004610ff9565b61038c565b005b3480156101c057600080fd5b506101b26101cf366004611012565b610535565b3480156101e057600080fd5b506101b26101ef366004610ff9565b6107ac565b34801561020057600080fd5b50609754610214906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b34801561023857600080fd5b506101b2610841565b34801561024d57600080fd5b506033546001600160a01b0316610214565b34801561026b57600080fd5b5061029361027a366004610fdc565b609b602052600090815260409020805460019091015482565b60408051928352602083019190915201610119565b3480156102b457600080fd5b50609854610214906001600160a01b031681565b3480156102d457600080fd5b506102de60995481565b604051908152602001610119565b3480156102f857600080fd5b506101b2610307366004610fdc565b610855565b6101b261031a366004610ff9565b610a0b565b34801561032b57600080fd5b506102de609a5481565b34801561034157600080fd5b506101b2610350366004610fdc565b610bfa565b60006001600160e01b031982166319c9015360e01b148061038657506301ffc9a760e01b6001600160e01b03198316145b92915050565b80600081116103d35760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642074696d65732160901b60448201526064015b60405180910390fd5b80609a546103e19190611061565b341461041e5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206665652160a01b60448201526064016103ca565b338061045f5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420616464726573732160801b60448201526064016103ca565b6001600160a01b0381166000908152609b602090815260409182902082518084019093528054808452600190910154918301919091526104d35760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207469636b65742160881b60448201526064016103ca565b336000908152609b6020526040812060010180548692906104f5908490611080565b909155505060405184815233907f857c2e2504f1791306e6c7f5bfed2bc57c7aee4d04c662e5ff1a99db34a0f0579060200160405180910390a250505050565b600054610100900460ff16158080156105555750600054600160ff909116105b8061056f5750303b15801561056f575060005460ff166001145b6105d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103ca565b6000805460ff1916600117905580156105f5576000805461ff0019166101001790555b6105fd610c73565b610605610ca2565b610616836340c10f1960e01b610cc9565b6106625760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964205469636b657420636f6e747261637400000000000000000060448201526064016103ca565b6106738263761fbae960e11b610cc9565b6106b75760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a590810d85cda0818dbdb9d1c9858dd605a1b60448201526064016103ca565b609780546001600160a01b038086166001600160a01b0319928316179092556098805492851692909116821790556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b15801561071b57600080fd5b505afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611098565b61075e90600a61119f565b609a5580156107a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6107b4610cec565b6000811161080e5760405162461bcd60e51b815260206004820152602160248201527f4e6577207072696365206d7573742062652067726561746572207468616e20306044820152602160f81b60648201526084016103ca565b609a81905560405181907f51c501a650d090855cd4494b7325d48b6fd8b535b039d87c0a1c531cb9ffa22f90600090a250565b610849610cec565b6108536000610d46565b565b61085d610cec565b806001600160a01b0381166108a75760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420616464726573732160801b60448201526064016103ca565b6001600160a01b0381166000908152609b6020908152604091829020825180840190935280548084526001909101549183019190915261091b5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207469636b65742160881b60448201526064016103ca565b6001600160a01b0383166000908152609b60205260409020600101546109835760405162461bcd60e51b815260206004820152601760248201527f5469636b6574206973206f7574206f662074696d65732100000000000000000060448201526064016103ca565b6001600160a01b0383166000908152609b6020526040812060019081018054919290916109b19084906111ae565b90915550506001600160a01b0383166000818152609b60209081526040918290206001015491519182527f1f09eebc3d0d1f1f005bdc8f3897cde0550ab3792f446fe984013fcd0d6a0a29910160405180910390a2505050565b8060008111610a4d5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642074696d65732160901b60448201526064016103ca565b80609a54610a5b9190611061565b3414610a985760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206665652160a01b60448201526064016103ca565b336000908152609b602052604090205415610aee5760405162461bcd60e51b8152602060048201526016602482015275416c726561647920626f75676874207469636b65742160501b60448201526064016103ca565b6097546001600160a01b03166340c10f1933609960008154610b0f906111c5565b91829055506040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505060408051808201825260995481526020808201878152336000908152609b909252929020815181559151600190920191909155603354909250610bbd91506001600160a01b031634610d98565b60995460405184815233907fa9a40dec7a304e5915d11358b968c1e8d365992abf20f82285d1df1b30c8e24c9060200160405180910390a3505050565b610c02610cec565b6001600160a01b038116610c675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ca565b610c7081610d46565b50565b600054610100900460ff16610c9a5760405162461bcd60e51b81526004016103ca906111e0565b610853610eb1565b600054610100900460ff166108535760405162461bcd60e51b81526004016103ca906111e0565b6000610cd483610ee1565b8015610ce55750610ce58383610f14565b9392505050565b6033546001600160a01b031633146108535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ca565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80471015610de85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103ca565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e35576040519150601f19603f3d011682016040523d82523d6000602084013e610e3a565b606091505b50509050806107a75760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103ca565b600054610100900460ff16610ed85760405162461bcd60e51b81526004016103ca906111e0565b61085333610d46565b6000610ef4826301ffc9a760e01b610f14565b80156103865750610f0d826001600160e01b0319610f14565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610f86575060208210155b8015610f925750600081115b979650505050505050565b600060208284031215610faf57600080fd5b81356001600160e01b031981168114610ce557600080fd5b6001600160a01b0381168114610c7057600080fd5b600060208284031215610fee57600080fd5b8135610ce581610fc7565b60006020828403121561100b57600080fd5b5035919050565b6000806040838503121561102557600080fd5b823561103081610fc7565b9150602083013561104081610fc7565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561107b5761107b61104b565b500290565b600082198211156110935761109361104b565b500190565b6000602082840312156110aa57600080fd5b815160ff81168114610ce557600080fd5b600181815b808511156110f65781600019048211156110dc576110dc61104b565b808516156110e957918102915b93841c93908002906110c0565b509250929050565b60008261110d57506001610386565b8161111a57506000610386565b8160018114611130576002811461113a57611156565b6001915050610386565b60ff84111561114b5761114b61104b565b50506001821b610386565b5060208310610133831016604e8410600b8410161715611179575081810a610386565b61118383836110bb565b80600019048211156111975761119761104b565b029392505050565b6000610ce560ff8416836110fe565b6000828210156111c0576111c061104b565b500390565b60006000198214156111d9576111d961104b565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122033097cdf6008191e3782a26d44e73c758b3dbfbca7dce2bab2ec81ea549b9a0f64736f6c63430008090033";

type TicketManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketManager__factory extends ContractFactory {
  constructor(...args: TicketManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TicketManager> {
    return super.deploy(overrides || {}) as Promise<TicketManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TicketManager {
    return super.attach(address) as TicketManager;
  }
  override connect(signer: Signer): TicketManager__factory {
    return super.connect(signer) as TicketManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketManagerInterface {
    return new utils.Interface(_abi) as TicketManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketManager {
    return new Contract(address, _abi, signerOrProvider) as TicketManager;
  }
}
