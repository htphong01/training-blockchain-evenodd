/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Cash, CashInterface } from "../../contracts/Cash";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610247578063a9059cbb1461025a578063dd62ed3e1461026d578063f0141d8414610280578063f2fde38b1461028757600080fd5b8063715018a6146102015780638129fc1c146102095780638da5cb5b1461021157806395d89b411461022c5780639dc29fac1461023457600080fd5b806323b872dd116100f457806323b872dd14610188578063313ce5671461019b57806339509351146101b057806340c10f19146101c357806370a08231146101d857600080fd5b806301ffc9a71461012657806306fdde031461014e578063095ea7b31461016357806318160ddd14610176575b600080fd5b610139610134366004610f78565b61029a565b60405190151581526020015b60405180910390f35b6101566102d1565b6040516101459190610fa9565b61013961017136600461101a565b610363565b6099545b604051908152602001610145565b610139610196366004611044565b61037b565b60065b60405160ff9091168152602001610145565b6101396101be36600461101a565b61039f565b6101d66101d136600461101a565b6103c1565b005b61017a6101e6366004611080565b6001600160a01b031660009081526097602052604090205490565b6101d6610462565b6101d6610476565b6033546040516001600160a01b039091168152602001610145565b6101566105ce565b6101d661024236600461101a565b6105dd565b61013961025536600461101a565b61066c565b61013961026836600461101a565b6106e7565b61017a61027b36600461109b565b6106f5565b600661019e565b6101d6610295366004611080565b610720565b60006001600160e01b03198216632d178d3160e01b14806102cb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060609a80546102e0906110ce565b80601f016020809104026020016040519081016040528092919081815260200182805461030c906110ce565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050905090565b600033610371818585610796565b5060019392505050565b6000336103898582856108bb565b610394858585610935565b506001949350505050565b6000336103718185856103b283836106f5565b6103bc919061111f565b610796565b6103c9610b03565b80600081116104105760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b60448201526064015b60405180910390fd5b61041a8383610b5d565b826001600160a01b03167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe8360405161045591815260200190565b60405180910390a2505050565b61046a610b03565b6104746000610c3d565b565b600054610100900460ff16158080156104965750600054600160ff909116105b806104b05750303b1580156104b0575060005460ff166001145b6105135760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610407565b6000805460ff191660011790558015610536576000805461ff0019166101001790555b61057560405180604001604052806004815260200163086c2e6d60e31b815250604051806040016040528060018152602001604360f81b815250610c8f565b61057d610cc0565b610585610cef565b80156105cb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609b80546102e0906110ce565b6105e5610b03565b80600081116106275760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642076616c75652160901b6044820152606401610407565b6106318383610d16565b826001600160a01b03167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df78360405161045591815260200190565b6000338161067a82866106f5565b9050838110156106da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610407565b6103948286868403610796565b600033610371818585610935565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b610728610b03565b6001600160a01b03811661078d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610407565b6105cb81610c3d565b6001600160a01b0383166107f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610407565b6001600160a01b0382166108595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610407565b6001600160a01b0383811660008181526098602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006108c784846106f5565b9050600019811461092f57818110156109225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610407565b61092f8484848403610796565b50505050565b6001600160a01b0383166109995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610407565b6001600160a01b0382166109fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610407565b6001600160a01b03831660009081526097602052604090205481811015610a735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610407565b6001600160a01b03808516600090815260976020526040808220858503905591851681529081208054849290610aaa90849061111f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610af691815260200190565b60405180910390a361092f565b6033546001600160a01b031633146104745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610407565b6001600160a01b038216610bb35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610407565b8060996000828254610bc5919061111f565b90915550506001600160a01b03821660009081526097602052604081208054839290610bf290849061111f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b5050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610cb65760405162461bcd60e51b815260040161040790611137565b610c398282610e61565b600054610100900460ff16610ce75760405162461bcd60e51b815260040161040790611137565b610474610eaf565b600054610100900460ff166104745760405162461bcd60e51b815260040161040790611137565b6001600160a01b038216610d765760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610407565b6001600160a01b03821660009081526097602052604090205481811015610dea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610407565b6001600160a01b0383166000908152609760205260408120838303905560998054849290610e19908490611182565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108ae565b505050565b600054610100900460ff16610e885760405162461bcd60e51b815260040161040790611137565b8151610e9b90609a906020850190610edf565b508051610e5c90609b906020840190610edf565b600054610100900460ff16610ed65760405162461bcd60e51b815260040161040790611137565b61047433610c3d565b828054610eeb906110ce565b90600052602060002090601f016020900481019282610f0d5760008555610f53565b82601f10610f2657805160ff1916838001178555610f53565b82800160010185558215610f53579182015b82811115610f53578251825591602001919060010190610f38565b50610f5f929150610f63565b5090565b5b80821115610f5f5760008155600101610f64565b600060208284031215610f8a57600080fd5b81356001600160e01b031981168114610fa257600080fd5b9392505050565b600060208083528351808285015260005b81811015610fd657858101830151858201604001528201610fba565b81811115610fe8576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461101557600080fd5b919050565b6000806040838503121561102d57600080fd5b61103683610ffe565b946020939093013593505050565b60008060006060848603121561105957600080fd5b61106284610ffe565b925061107060208501610ffe565b9150604084013590509250925092565b60006020828403121561109257600080fd5b610fa282610ffe565b600080604083850312156110ae57600080fd5b6110b783610ffe565b91506110c560208401610ffe565b90509250929050565b600181811c908216806110e257607f821691505b6020821081141561110357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113257611132611109565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561119457611194611109565b50039056fea2646970667358221220660bb240bd7681a67308314f4c7e2dacdf89219ba7d86cb70674de65b19089f664736f6c63430008090033";

type CashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cash__factory extends ContractFactory {
  constructor(...args: CashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cash> {
    return super.deploy(overrides || {}) as Promise<Cash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cash {
    return super.attach(address) as Cash;
  }
  override connect(signer: Signer): Cash__factory {
    return super.connect(signer) as Cash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CashInterface {
    return new utils.Interface(_abi) as CashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cash {
    return new Contract(address, _abi, signerOrProvider) as Cash;
  }
}
